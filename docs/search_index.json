[["index.html", "Companies House Data Quality Strategy 1 Preface 1.1 Making sure our register benefits the public good and wider economy 1.2 Why do we need a Data Strategy and Management Framework?", " Companies House Data Quality Strategy Rob Eva 1 Preface 1.1 Making sure our register benefits the public good and wider economy As part of developing a strategy and framework towards the management of data, it is important to capture the context and main drivers that informs Companies Houses strategic goals. A clear strategic CH goal is to create, maintain and publish a companies register built upon relevant and accurate information that supports the UKs global reputation as a trusted place to do business and a leading exponent of greater corporate transparency. Our data needs to inspire trust and confidence so that we can maximise its value and tackle economic crime through analysis and intelligence. Specifically, this meets the governments industrial strategy aims to: Make the UK a good place to set up and run a business Ensure corporate transparency which directly supports financing of the corporate sector and inward investment to the UK economy Tackle criminal activity such as money-laundering, fraud and other financial and company related crime. Companies House is seeing an increase in the demand for data, research and analysis alongside the data that is freely available to the public. These are primarily to help law enforcement activities but requests for ad hoc information are also on the rise. Alongside this, there are new opportunities through the Digital Economy Act (2017) for Companies House to share data and to gain access to new data sources that will enable verification and the identification of suspicious activity to be undertaken. However, the world is changing. The increasing volume and variety of data available, coupled with rapid technological development will facilitate the processing and analysis of more data in richer and more complex forms. The ability to harness the power of data is critical in enabling Companies House to be at the forefront of tackling financial and company related crime. The Companies House Data Strategy coupled with its security and digital strategies means that through the development of the right data capability, governance and management framework, which balances the need to extract value from data against the appropriate safeguards, we can respond and achieve our goals. 1.2 Why do we need a Data Strategy and Management Framework? The purpose of Companies House is to drive confidence in the UK economy. It does this by primarily collecting and presenting data on UK companies that benefits the public good and the wider economy. Companies House operates in line with the Companies Act 2006. A consultation to reform the act is currently in progress and the feedback from this could significantly change the way in which Companies House operates. The notion of data is not simply numbers in a spreadsheet. Data means known facts. In addition to numbers, it can mean words, images, and sounds. Metadata is information about data and is used to find, categorise and link different elements of data together. Harnessing data and metadata are fundamental building blocks in the collection and presentation of information on UK companies. Companies House is a producer of official statistics as well as significant levels of management information for both internal and external purposes. As such, Companies House follows the Code of Practice for Statistics, which aims to provide the framework to ensure that statistics are trustworthy, of good quality, and are valuable. In addition, Companies House needs to ensure compliance with legislation such as General Data Protection Regulation (GDPR) and the Data Protection Act (DPA). This means that protecting information is essential. Data management is one of the foundational layers that enables all of this to happen. Data Management is amongst several cross-cutting layers that enables our organisation to operate. Figure 1.1: Logo from The National Data Strategy "],["the-data-quality-project.html", "2 The Data Quality Project 2.1 Project Background / Problem Statement 2.2 Project Objectives", " 2 The Data Quality Project 2.1 Project Background / Problem Statement Data is the new currency and fundamental to effective, evidence-based decision-making. It underpins everything from major policy decisions to routine operational processing to external appraisal for a variety of analytical reasons. Often, however, our data is of unknown or questionable quality. This presents huge challenges. Poor or unknown quality data weakens evidence, undermines trust, and ultimately leads to poor outcomes. It makes our organisation less efficient and impedes effective decision-making. To make better decisions, we need better quality data. Improved data quality is a claimed benefit in many of the portfolio projects. However, currently there is not a harmonised method to assess this. The data quality framework, assessment and associated automated pipeline will address this gap and provide a consistent toolkit to aid in the quality assessment of data held within Companies House. Understanding areas of concern in data quality will aid in interventions to improve the overall integrity of the register. For example, understanding the extent of duplicated addresses, will help us to inform development work to reduce these errors, thereby improving the integrity of the register. Improvements in terms of consistency and duplication will give us more confidence when proactively identifying suspicious activity, meaning we can trust our analysis to be used to inform law enforcement partners and helps to reduce economic crime. 2.2 Project Objectives The main objectives of this project are to deliver the following: A framework to assess the quality of data within Companies House to enable the organisation to deliver against its strategic goals. This will support the work of the Data Strategy. A baseline measure of data quality across our data estate, identifying areas for improvement and informing the course of the Companies House Strategy. Data set prioritisation will need to be undertaken. An automated data and analytical pipeline that identifies and monitors our data quality levels. A toolkit of methods to actively monitor the impact of projects and business improvement work on overall data quality aligned to the data quality dimensions1 An assessment of organisational maturity levels in terms of skills and roles and responsibilities, including development of training around the trade-off of quality dimensions to allow effective implementation and take-up. "],["intro.html", "3 Introduction to APIs 3.1 What exactly is an API? 3.2 What is API integration? 3.3 History of APIs 3.4 What are APIs used for? 3.5 Why should you care about APIs? 3.6 How do APIs work? 3.7 Why use APIs? Reasons to use APIs 3.8 The different kinds of APIs", " 3 Introduction to APIs 3.1 What exactly is an API? If you want to learn about APIs, youve come to the right place! API stands for application programming interface. APIs are the little pieces of code that make it possible for digital devices, software applications, and data servers to talk with each other, and theyre the essential backbone of so many services we now rely on. Digging deeper, an easy way to understand the definition of an API is to think about the applications that you use every day. In an internet-connected world, web and mobile applications are designed for humans to use, while APIs are designed for other digital systems and applications to use. Websites and APIs both do the same things, like return data, content, images, video, and other information. But APIs dont return all the details that are needed to make things look pretty for the human eyeyou only get the raw data and other machine-readable information needed behind the scenes to put the resources being delivered to work, with very little assistance from a human. 3.2 What is API integration? API integration is a pretty common Google Search term, and we have good news. The whole reason APIs exist is to support integration. API integration is simply the connection between two (or more) applications, programs, services, or systems, using APIs. Applications use APIs to send and receive data and content between each other. Keep reading for a history of APIs, what theyre used for, examples, and more. 3.3 History of APIs Web APIs got their start by putting the commercial in .com, powering commerce startups looking to change the way we do business on the web. They took advantage of this new medium to make products and services available to customers via a single website, and as they worked with partners, they sought to automate much of the commerce that was powering the web and included juggernauts like Salesforce, eBay, and Amazon. In 2004, a shift in the API landscape began to emerge as a new breed of API providers started to pop up, offering ways to share information with local and global social networks, led by the likes of Facebook and Twitter. With a strong start in commercial and social applications, APIs continued to grow as everything moved to the cloud, became much more mobile, and provided the foundation for next-generation devices. To get the full scoop on the history of APIs, check out this Postman blog post. 3.4 What are APIs used for? What are APIs used for? Lots and lots and lots of things, including: APIs power desktop applications. APIs are behind most web applications. APIs make mobile applications possible. APIs are the integrations for no code solutions. APIs connect devices to the internet. APIs define the networksor the information passed between applications, systems, and devices. APIs even connect everyday things like automobiles, doorbells, dishwashers, and wearable devices. 3.5 Why should you care about APIs? Curious about why you should care about APIs? Heres a very brief list: APIs help you access the data you need to get your work done and do daily taskswhether youre a business user, a student, or using an application just for fun. APIs make it possible to integrate different systems together, like Customer Relationship Management systems, databases, or even school learning management systems. APIs help different departments, teams, and groups become more agile. APIs help organizations, schools, government agencies, and nonprofits strengthen relationships with other organizations, research institutes, and agencies. 3.6 How do APIs work? APIs work by sharing data and information between applications, systems, and devicesmaking it possible for these things to talk with each other. Sometimes the easiest way to think about APIs is to think about a metaphor, and a common scenario that a lot of folks use is that of the customer, a waiter, and a restaurant kitchen: A customer talks to the waiter and tells the waiter what she wants. The waiter takes down the order and communicates it to the kitchen. The kitchen does their work, creating the food, and then the waiter delivers the order back to the customer. In this metaphor, a customer is like a user, who tells the waiter what she wants. The waiter is like an API, receiving the customers order and translating the order into easy-to-follow instructions that the kitchen then uses to fulfill that orderoften following a specific set of codes, or input, that the kitchen easily recognizes. The kitchen is like a server that does the work of creating the order in the manner the customer wants it, hopefully! When the food is ready, the waiter picks up the order and delivers it to the customer. 3.7 Why use APIs? Reasons to use APIs What are the reasons to use APIs? Almost too many to count, but to truly answer this question, we asked thousands of developers and professionals why they choose to produce or consume APIs in our annual State of the API report. Here are their top answers: Integration with internal and external systems: One of the top reasons developers use APIs is to integrate one system with another system. For example, if you want your Customer Relationship Management (CRM) system to integrate with your Marketing Automation system, you could use an API to enable the two systems to talk to one another so that you automatically send a marketing email when a sales representative adds a new prospective customer to the CRM. Adding or enhancing functionality of internal and external systems: Another common reason that developers use APIs is to add or enhance functionality of internal systems as well as external systems. For example, if you have an internal system that tracks vacation days for managers, you might use an API to allow employees to request days off from their email. Adding or enhancing functionality for customers: Sometimes when you add or enhance functionality, its about improving customers experiences and helping them interact better with your organization. For example, if you worked for a food delivery company, you might use an API to automatically notify customers when their meal is approaching their house. Speeding up software and system development: APIs allow developers to code and deliver functionality as microservices, instead of big, monolithic applications. By breaking this functionality up, developers can actually speed up software development and system development by eliminating dependencies and reducing the overhead involved in code reviews, testing, and more. Another way that APIs help accelerate development is by allowing frontend and backend teams work in parallel. In other words, a frontend developer can work on creating the frontend of a system, what users and customers see, while a backend developer can work on the underlying system, or what users and customers do not see. Reducing operating costs: Another reason developers use APIs is to reduce operating costs. APIs can help perform a number of functions that may have been done by humans from pulling reports to sending emails to abstracting data from one system to share with another system. APIs can help reduce operating costs in many, many other ways. Examples include, automatically starting up and shutting down manufacturing systems, creating schedules for workers, or even reducing the number of people who need software licenses. Reducing software development costs: One of the biggest ways APIs can reduce software development costs is by allowing developers to build reusable components. For example, a backend developer can create a system that serves up information about customers, including their names, email addresses, recent product purchases, etc. Then other developers across the organization can use APIs to grab that information and track payments for finance and accounts payable, help customer service resolve problems faster, or even create recommendations for marketing campaigns. APIs can also help reduce software development costs in a number of other ways such as reducing architectural complexity and reducing the effort required to make changes to systems. Improving software and system testing: APIs can help improve software and system testing by allowing quality engineering teams to separate tests for frontend components, the parts of software that users see, from tests for backend components, the parts of software that users dont see. API health, quality, and performance can also be checked using automated testing, and API testing can be integrated into the CI / CD pipeline. Improving organizational security and governance: APIs can be used to improve organizational security. For example, APIs are often used to power Single Sign-On, which is the ability for users to use one username and password to login into multiple systems. This helps avoid the dreaded pile of sticky notes with usernames and passwords, which can be a big security risk. APIs are also often a big part of corporate governance, too. APIs can be used to enforce and automate corporate rules and policies like requiring approval before expenses are paid to employees. Enabling mobile applications: A lot of mobile applications rely on APIs to deliver important information to mobile users. For example, if you use your mobile phone to check in for a flight and select your seat, APIs can communicate the seat you selected so that flight attendants know where you are seated when you get onboard. Reducing outages and non-performing systems: Finally, APIs can help reduce outages and non-performing systems. For example, a company might use an API to quickly identify a specific problem with a manufacturing line, and even recommend a fix, which helps maintenance staff fix the system and get back online faster. 3.8 The different kinds of APIs There are many different types of APIs, and many different ways to categorize them. Here are some of the most common. 3.8.1 Internal vs. External vs. Partner APIs One way to categorize APIs is by who has access to them: Internal APIs are APIs that are private and only used by your team, department, company, or organization. External APIs, also known as public APIs or open APIs (which is not to be confused with OpenAPI), are publicly available APIs that are available for anyone to use. Partner APIs are private and shared only with specific, integration partners outside of your organization. 3.8.2 API architectural styles When it comes to API architecture, there are a number of stylessome newer, some olderand all have a place in the API ecosystem. Defining architectural styles broadly, here is a list of the most popular styles listed in order of how frequently theyre used: REST API: REST is an acronym for REpresentational State Transfer. REST APIs rely on a few guiding principles such as a client-server structure, simple, uniform interfaces to communicate across systems, stateless operations, and more. Webhooks: Webhooks are event-based, and simply put, are automated messages sent from one system to another system anytime an event occurs. Webhooks are even referred to reverse APIs as a concept to check for changes in data. SOAP API: SOAP is an acronym for Simple Object Access Protocol. SOAP APIs are more structured and formalized than other APIs, they are reliable and trusted, but can be slower than other APIs. SOAP APIs uses an XML-based messaging protocol which includes the Envelope, Header, and Body tags as required by the endpoint. GraphQL API: GraphQL is an acronym for Graph Query Language. The Graph Query Language defines how one API asks another API for information and instead of relying on how the server defines the endpoint, a GraphQL query can ask for a specific piece of information. GraphQL was originally created by Facebook as an internal tool in 2012 but they publically released it in 2015 as an open-source language for APIs. WebSocket API: WebSocket APIs rely on the WebSocket computer communications protocol, which is a full-duplex communication channel over a single TCP connection. Compare WebSocket protocol to HTTP (HyperText Transfer Protocol), which is a half-duplex communication. WebSocket APIs provide a standard way for servers to send information and data to clients, even when the client is not requesting data. WebSocket APIs also allow data to be communicated between clients and servers, while keeping connections open. gRPC API: The RPC in gRPC stands for Remote Procedure Call; gRPC APIs were originated by Google. In gRPC, a client can call on a server just like it is a local object, making it easier for distributed applications and systems to communicate with one another. Server-sent event API: Server-Sent Events, also known as SSE, is a technology that relies on data being pushed from the server. This allows a client to receive updates automatically via a HTTP connection. AMQP API: AMQP is an abbreviation for Advanced Message Queuing Protocol. AMQP is a protocol that follows open standards, and works at the application layer. AMQP is best suited for message-oriented middleware, and like other protocols, AMQP dictates how messaging providers and clients communicate with each other. (Hint: message is in the name!) There are a few features that distinguish AMQP including its ability to queue and route messages, which support the reliability and security of AMQP. MQTT APIs: MQTT is an abbreviation for Message Queuing Telemetry Transport. The MQTT messaging protocol is defined by Organization for the Advancement of Structured Information Standards, better known as OASIS. MQTT is well-suited for the Internet of Things (IoT), in part because it is extremely lightweight. MQTT allows devices to publish and/or subscribe to messages. EDI: EDI is an abbreviation for Electronic Data Interchange, and its been around for a long time, since the 70s! The idea behind EDI is to allow businesses to communicate electronically with each, typically transmitting information that was written on paper, like receipts or invoices that an accounts payable might send out, or order information such as purchase orders. "],["companies-house-apis.html", "4 Companies House APIs 4.1 Companies House API overview 4.2 Before you start 4.3 Register a Companies House user account 4.4 About the Companies House API 4.5 API authentication 4.6 Developer guidelines", " 4 Companies House APIs 4.1 Companies House API overview Companies House is an executive agency of the Department for Business Innovation and Skills (BEIS). Our main functions are: to incorporate and dissolve limited companies; examine and store company information delivered under the Companies Act and related legislation; and make this information available to the public. The Companies House API lets you retrieve information about limited companies (and other companies that fall within the Companies Act 2006). The data returned is live and real-time, and is simple to use and understand. 4.2 Before you start If you are new to the Companies House API, take a look at the get started guide, which has resources and information to help you. In the Developer Forum, you can also discuss the API, find help and provide feedback. 4.3 Register a Companies House user account You must register a user account with Companies House to explore and perform tests with the Companies House API. To get started quickly, each Companies House API reference page contains an embedded explorer to try out the service without having to write any client code. 4.4 About the Companies House API Companies House digitally records almost all the information it receives and makes this available to the public through its website and through the Companies House RESTful API. Being RESTful, each record of information is assigned a globally unique URI, and the operations available on each resource are directly mapped to HTTP verbs. Data can be easily consumed by issuing simple GET requests on the required resource URI. Read the Companies House REST API overview for more information about our API approach, REST web services and the JSON data format. 4.5 API authentication Access to API services requires authentication. The Companies House API requires API authentication credentials to be sent with each request, which is sent as an API key, stream key or OAuth access token. Learn how to create an application as well as API keys, stream keys and OAuth web clients. 4.6 Developer guidelines Read the developer guidelines for information about security, API rate limits and enumerated types as youre developing your application. "],["developer-guidelines-1.html", "5 Developer guidelines 5.1 API rate limits 5.2 Enumerated types 5.3 Data resources 5.4 Application security 5.5 API key security", " 5 Developer guidelines 5.1 API rate limits Rate limiting is applied to the Companies House API to ensure a high quality service is delivered for all users, and to protect client applications from unexpected loops. You can make up to 600 requests within a 5 minute period. If you exceed this limit, you will receive a 429 Too Many Requests HTTP status code for each request made within the rest of the 5 minute time frame. At the end of the period, your rate limit will reset back to 600 requests. If you have an application that requires a higher rate limit than this default, contact us. 5.2 Enumerated types A majority of the resources returned by the Companies House API contain members that reference enumeration types. This helps the resources to be self-documenting, and allows clients to interpret the meaning of a resource member without needing to parse a text description. Enumeration types are used to supplement or replace a text description. This allows clients to display their own version of a description or provide descriptions in multiple languages. The collection of enumeration types used by Companies House are available on GitHub. These files provide mapping between enumeration type and text description, and are divided into sets or classes. Each API resource member will define which class of enumeration is being returned. A planned enhancement to the enumeration scheme is the provision of API endpoints that will return the enumeration class catalogue. This avoids enumerations having to be hard-coded within a client, and by periodically checking for change through ETags, clients do not have to download the full catalogue. 5.3 Data resources Data is mostly returned as JSON documents. Your application must be able to handle the order of document members changing over time and expect to receive members it has not seen before. 5.4 Application security The API can only be accessed over Transport Layer Security (TLS). We recommend using TLS 1.2. 5.5 API key security It is important to keep your API keys secure. This will prevent them from being discovered, your account from being compromised and your rate-limit quota from being exceeded. 5.5.1 Do not embed API keys in your code Storing keys in your application code increases the risk that they will be discovered, particularly if any of your source code is made public or it can be viewed by people who should not have access to the key. Instead, you should consider storing them inside environment variables or configuration. 5.5.2 Do not store API keys in your source tree If you store API keys in files, for example, configuration or environment files, do not store them inside the application source tree. If all or part of the source is made public, the key may be compromised. 5.5.3 Restrict API key use by IP address and domain Limit the use of a key to a specific IP address or domain to reduce its usefulness if it becomes compromised. 5.5.4 Regenerate your API keys Regenerate your API keys regularly, including with each application release, to reduce the chance that a key will be discovered. 5.5.5 Delete API keys when no longer required Remove unused keys from your registered applications page to limit the number of entry points into your account. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
